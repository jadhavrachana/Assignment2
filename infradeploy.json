{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for all resources."
			}
		},
		"environments": {
      "defaultValue": [
        "Dev",
        "QA",
        "UAT",
        "Preview"
      ],
      "type": "array",
      "metadata": {
        "description": "Array with the names for the environment slots"
      },
      "maxLength": 19
    },
		"virtualMachinesname1": {
			"type": "String"
		},
		"virtualMachinesname2": {
			"type": "String"
		},
		"virtualMachinesname3": {
			"type": "String"
		},

		"networkSecurityGroupsname1": {
			"defaultValue": "jsnsg",
			"type": "String"
		},
		"networkSecurityGroupsname2": {
			"defaultValue": "adnsg",
			"type": "String"
		},
		"networkSecurityGroupsname3": {
			"defaultValue": "toolnsg",
			"type": "String"
		},

		"networkInterfacesname1": {
			"defaultValue": "jumpserver985",
			"type": "String"
		},
		"networkInterfacesname2": {
			"defaultValue": "adserver496",
			"type": "String"
		},
		"networkInterfacesname3": {
			"defaultValue": "toolserver121",
			"type": "String"
		},

		"publicIPAddresses_JumpServer_ip_name": {
			"defaultValue": "JumpServer-ip",
			"type": "String"
		},

		"adminPassword": {
			"type": "SecureString"
		},

	
		"sqlAdministratorLogin": {
			"type": "string",
			"metadata": {
				"description": "The admin user of the SQL Server"
			}
		},
		"sqlAdministratorLoginPassword": {
			"type": "securestring",
			"metadata": {
				"description": "The password of the admin user of the SQL Server"
			}
		},
		"applicationGatewaySize": {
			"type": "string",
			"allowedValues": [
				"WAF_v2"
			],
			"defaultValue": "WAF_v2",
			"metadata": {
				"description": "Specifies the application gateway SKU name."
			}
		},
		"capacity": {
			"type": "int",
			"defaultValue": 2,
			"metadata": {
				"description": "Number of instances"
			}
		},
		"probeEnabled": {
			"type": "bool",
			"defaultValue": true,
			"metadata": {
				"description": "Probe Enabled"
			}
		},
		"wafEnabled": {
			"type": "bool",
			"defaultValue": true,
			"metadata": {
				"description": "WAF Enabled"
			}
		},
		"wafMode": {
			"type": "string",
			"allowedValues": [
				"Detection",
				"Prevention"
			],
			"defaultValue": "Detection",
			"metadata": {
				"description": "WAF Mode"
			}
		},
		"wafRuleSetType": {
			"type": "string",
			"allowedValues": [
				"OWASP"
			],
			"defaultValue": "OWASP",
			"metadata": {
				"description": "WAF Rule Set Type"
			}
		},
		"wafRuleSetVersion": {
			"type": "string",
			"allowedValues": [
				"2.2.9",
				"3.0"
			],
			"defaultValue": "3.0",
			"metadata": {
				"description": "WAF Rule Set Version"
			}
		}

	},

	"variables": {
		"virtualNetworksname": "webappnet",
		"subnet1": "JSSubnet",
		"subnet2": "ADSubnet",
		"subnet3": "ToolSubnet",
		"applicationGatewayName": "applicationGateway1",
		"publicIPAddressName": "publicIp1",
		"publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
		"applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',variables('applicationGatewayName'))]",
		"hostingPlanName": "[concat('hostingplan', uniqueString(resourceGroup().id))]",
		"webSiteName": "[concat('webSite', uniqueString(resourceGroup().id))]",
		 "standardPlanMaxAdditionalSlots": 4,
		"sqlserverName": "[concat('sqlserver', uniqueString(resourceGroup().id))]",
		"databaseName": "sampledb",
		"subnetID1": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworksname'), variables('subnet1'))]",
		"subnetID2": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworksname'), variables('subnet2'))]",
		"subnetID3": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworksname'), variables('subnet3'))]"
	},


	"resources": [

		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[parameters('networkSecurityGroupsname1')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [{
						"name": "rdp_rule",
						"properties": {
							"description": "Allow RDP",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "3389",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound"
						}
					},
					{
						"name": "web_rule",
						"properties": {
							"description": "Allow WEB",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "80",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 101,
							"direction": "Inbound"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[parameters('networkSecurityGroupsname2')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [{
						"name": "Allow_JS",
						"properties": {
							"description": "Allow Jump Subnet",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "443",
							"sourceAddressPrefix": "10.0.0.0/24",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound"
						}
					}

				]
			}
		},
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[parameters('networkSecurityGroupsname3')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [{
						"name": "Allow_JS",
						"properties": {
							"description": "Allow Jump Subnet",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "443",
							"sourceAddressPrefix": "10.0.0.0/24",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound"
						}
					}

				]
			}
		},
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2020-05-01",
			"name": "[parameters('publicIPAddresses_JumpServer_ip_name')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Basic"
			},
			"properties": {
				"ipAddress": "40.88.6.179",
				"publicIPAddressVersion": "IPv4",
				"publicIPAllocationMethod": "Dynamic",
				"idleTimeoutInMinutes": 4
			}
		},

		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-05-01",
			"name": "[parameters('networkInterfacesname1')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_JumpServer_ip_name'))]",
				"[variables('subnetID1')]"
			],
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAddress": "10.0.0.4",
						"privateIPAllocationMethod": "Dynamic",
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_JumpServer_ip_name'))]"
						},
						"subnet": {
							"id": "[variables('subnetID1')]"
						}

					}
				}]
			}
		},

		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-05-01",
			"name": "[parameters('networkInterfacesname2')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('subnetID2')]"
			],
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAddress": "10.0.1.4",
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[variables('subnetID2')]"
						}

					}
				}]
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-05-01",
			"name": "[parameters('networkInterfacesname3')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('subnetID3')]"
			],
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAddress": "10.0.2.4",
						"privateIPAllocationMethod": "Dynamic",

						"subnet": {
							"id": "[variables('subnetID3')]"
						}

					}
				}]

			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks/subnets",
			"apiVersion": "2020-05-01",
			"name": "[concat(variables('virtualNetworksname'), '/ADSubnet')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworksname'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname2'))]"
			],
			"properties": {
				"addressPrefix": "10.0.1.0/24",
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname2'))]"
				}
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks/subnets",
			"apiVersion": "2020-05-01",
			"name": "[concat(variables('virtualNetworksname'), '/JSSubnet')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworksname'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname1'))]"
			],
			"properties": {
				"addressPrefix": "10.0.0.0/24",
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname1'))]"
				}
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks/subnets",
			"apiVersion": "2020-05-01",
			"name": "[concat(variables('virtualNetworksname'), '/ToolSubnet')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworksname'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname3'))]"
			],
			"properties": {
				"addressPrefix": "10.0.2.0/24",
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname3'))]"
				}
			}
		},


		{
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2020-05-01",
			"name": "[variables('virtualNetworksname')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname1'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname2'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname3'))]"
			],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"10.0.0.0/16"
					]
				},
				"subnets": [{
						"name": "[variables('subnet1')]",
						"properties": {
							"addressPrefix": "10.0.0.0/24",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname1'))]"
							}

						}
					},
					{

						"name": "[variables('subnet2')]",
						"properties": {
							"addressPrefix": "10.0.1.0/24",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname2'))]"
							}

						}
					},
					{
						"name": "[variables('subnet3')]",
						"properties": {
							"addressPrefix": "10.0.2.0/24",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsname3'))]"
							}

						}
					},
					{
						"name": "APPSubnet",
						"properties": {
							"addressPrefix": "10.0.3.0/28"


						}
					}
				]

			}
		},

		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2019-07-01",
			"name": "[parameters('virtualMachinesname1')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesname1'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "Standard_DS1_v2"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "MicrosoftWindowsServer",
						"offer": "WindowsServer",
						"sku": "2019-Datacenter",
						"version": "latest"
					}

				},
				"osProfile": {
					"computerName": "[parameters('virtualMachinesname1')]",
					"adminUsername": "[parameters('virtualMachinesname1')]",
					"adminPassword": "[parameters('adminPassword')]",
					"allowExtensionOperations": true
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesname1'))]"
					}]
				}

			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2019-07-01",
			"name": "[parameters('virtualMachinesname2')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesname2'))]"

			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "Standard_DS1_v2"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "MicrosoftWindowsServer",
						"offer": "WindowsServer",
						"sku": "2019-Datacenter",
						"version": "latest"
					}

				},
				"osProfile": {
					"computerName": "[parameters('virtualMachinesname2')]",
					"adminUsername": "[parameters('virtualMachinesname2')]",
					"adminPassword": "[parameters('adminPassword')]",
					"allowExtensionOperations": true

				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesname2'))]"
					}]
				}

			}
		},

		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"apiVersion": "2019-07-01",
			"name": "[concat(parameters('virtualMachinesname2'), '/CustomScriptExtension')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachinesname2'))]"
			],
			"properties": {
				"autoUpgradeMinorVersion": true,
				"publisher": "Microsoft.Compute",
				"type": "CustomScriptExtension",
				"typeHandlerVersion": "1.9",
				"settings": {
					"fileUris": [
						
                        "https://raw.githubusercontent.com/jadhavrachana/Assignment2/master/adinstall.ps1"
					],
					"commandToExecute": "[concat('Powershell -ExecutionPolicy Unrestricted -File \"' , 'adinstall.ps1')]"
				}

			}
		},

		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2019-07-01",
			"name": "[parameters('virtualMachinesname3')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesname3'))]"

			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "Standard_DS1_v2"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "MicrosoftWindowsServer",
						"offer": "WindowsServer",
						"sku": "2019-Datacenter",
						"version": "latest"
					}

				},
				"osProfile": {
					"computerName": "[parameters('virtualMachinesname3')]",
					"adminUsername": "[parameters('virtualMachinesname3')]",
					"adminPassword": "[parameters('adminPassword')]",
					"allowExtensionOperations": true

				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesname3'))]"
					}]
				}

			}
		},

		{
			"name": "[variables('sqlserverName')]",
			"type": "Microsoft.Sql/servers",
			"location": "[parameters('location')]",
			"tags": {
				"displayName": "SqlServer"
			},
			"apiVersion": "2018-06-01-preview",
			"properties": {
				"administratorLogin": "[parameters('sqlAdministratorLogin')]",
				"administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
				"version": "12.0"
			},
			"resources": [{
					"name": "[variables('databaseName')]",
					"type": "databases",
					"location": "[parameters('location')]",
					"tags": {
						"displayName": "Database"
					},
					"apiVersion": "2018-06-01-preview",
					"dependsOn": [
						"[variables('sqlserverName')]"
					],
					"properties": {
						"edition": "Basic",
						"collation": "SQL_Latin1_General_CP1_CI_AS",
						"maxSizeBytes": "1073741824",
						"requestedServiceObjectiveName": "Basic"
					}
				},
				{
					"type": "firewallrules",
					"apiVersion": "2018-06-01-preview",
					"dependsOn": [
						"[variables('sqlserverName')]"
					],
					"location": "[parameters('location')]",
					"name": "AllowAllWindowsAzureIps",
					"properties": {
						"endIpAddress": "0.0.0.0",
						"startIpAddress": "0.0.0.0"
					}
				}
			]
		},
		{
			"apiVersion": "2018-02-01",
			"name": "[variables('hostingPlanName')]",
			"type": "Microsoft.Web/serverfarms",
			"location": "[parameters('location')]",
			"tags": {
				"displayName": "HostingPlan"
			},
			"sku": {
				"name": "[if(lessOrEquals(length(parameters('environments')), variables('standardPlanMaxAdditionalSlots')), 'S1', 'P1')]"

			},
			"properties": {
				"name": "[variables('hostingPlanName')]"
			}
		},
		{
			"apiVersion": "2018-02-01",
			"name": "[variables('webSiteName')]",
			"type": "Microsoft.Web/sites",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('hostingPlanName')]"
			],
			"properties": {
				"name": "[variables('webSiteName')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
			},
			"resources": [{
				"apiVersion": "2018-02-01",
				"type": "config",
				"name": "connectionstrings",
				"dependsOn": [
					"[variables('webSiteName')]"
				],
				"properties": {
					"DefaultConnection": {
						"value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorLoginPassword'), ';')]",
						"type": "SQLAzure"
					}
				}
			}]
		},
		 {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(variables('webSiteName'), '/', parameters('environments')[copyIndex()])]",
      "location": "[parameters('location')]",
      "comments": "This specifies the web app slots.",
      "tags": {
        "displayName": "WebAppSlots"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]"
      ],
      "copy": {
        "name": "webPortalSlot",
        "count": "[length(parameters('environments'))]"
      }
    },
		{
			"apiVersion": "2018-05-01-preview",
			"name": "[concat('AppInsights', variables('webSiteName'))]",
			"type": "Microsoft.Insights/components",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('webSiteName')]"
			],
			"properties": {
				"ApplicationId": "[variables('webSiteName')]"
			}
		},
		{
			"apiVersion": "2020-05-01",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"publicIPAllocationMethod": "Static"
			}
		},

		{
			"apiVersion": "2020-05-01",
			"name": "[variables('applicationGatewayName')]",
			"type": "Microsoft.Network/applicationGateways",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworksname'))]",
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
			],
			"properties": {
				"sku": {
					"name": "[parameters('applicationGatewaySize')]",
					"tier": "WAF_v2",
					"capacity": "[parameters('capacity')]"
				},
				"gatewayIPConfigurations": [{
					"name": "appGatewayIpConfig",
					"properties": {
						"subnet": {
							"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworksname'), 'AppSubnet')]"
						}
					}
				}],
				"frontendIPConfigurations": [{
					"name": "appGatewayFrontendIP",
					"properties": {
						"PublicIPAddress": {
							"id": "[variables('publicIPRef')]"
						}
					}
				}],
				"frontendPorts": [{
					"name": "appGatewayFrontendPort",
					"properties": {
						"Port": 80
					}
				}],
				"backendAddressPools": [{
					"name": "appGatewayBackendPool",
					"properties": {
						"BackendAddresses": [{
							"IpAddress": "[concat(variables('webSiteName'),'.azurewebsites.net')]"
						}]
					}
				}],
				"backendHttpSettingsCollection": [{
					"name": "appGatewayBackendHttpSettings",
					"properties": {
						"Port": 80,
						"Protocol": "Http",
						"CookieBasedAffinity": "Disabled",
						"PickHostNameFromBackendAddress": true,
						"ProbeEnabled": "[parameters('probeEnabled')]",
						"Probe": {
							"id": "[concat(variables('applicationGatewayID'), '/probes/Probe1')]"
						}
					}
				}],
				"httpListeners": [{
					"name": "appGatewayHttpListener",
					"properties": {
						"FrontendIPConfiguration": {
							"Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
						},
						"FrontendPort": {
							"Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
						},
						"Protocol": "Http",
						"SslCertificate": null
					}
				}],
				"requestRoutingRules": [{
					"Name": "rule1",
					"properties": {
						"RuleType": "Basic",
						"httpListener": {
							"id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
						},
						"backendAddressPool": {
							"id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
						},
						"backendHttpSettings": {
							"id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
						}
					}
				}],

				"probes": [{
					"Name": "Probe1",
					"properties": {
						"Protocol": "Http",
						"Path": "/",
						"Interval": 30,
						"Timeout": 10,
						"UnhealthyThreshold": 3,
						"MinServers": 0,
						"PickHostNameFromBackendHttpSettings": true
					}
				}],
				"webApplicationFirewallConfiguration": {
					"enabled": "[parameters('wafEnabled')]",
					"firewallMode": "[parameters('wafMode')]",
					"ruleSetType": "[parameters('wafRuleSetType')]",
					"ruleSetVersion": "[parameters('wafRuleSetVersion')]"
				}

			}
		}


	]

}
